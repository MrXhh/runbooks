on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      dists-json:
        required: true
        type: string

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: configure git
      run: |
        git config --global user.name 'Anthony Sottile (deadsnakes)'
        git config --global user.email asottile+deadsnakes@umich.edu
    - name: clone target
      uses: actions/checkout@v3
      with:
        path: target
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}
    - name: clone runbooks
      uses: actions/checkout@v3
      with:
        path: runbooks
        repository: mrxhh/runbooks
    - name: pull upstream
      run: runbooks/import-upstream --repo target ${{ inputs.version }}
  build:
    needs: update
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: ${{ fromJSON(inputs.dists-json) }}
    steps:
    - name: configure git
      run: |
        git config --global user.name 'Anthony Sottile'
        git config --global user.email asottile+deadsnakes@umich.edu
    - name: clone target
      uses: actions/checkout@v3
      with:
        path: target
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}
    - name: clone runbooks
      uses: actions/checkout@v3
      with:
        path: runbooks
        repository: mrxhh/runbooks
    - name: import gpg key
      run: |
        install --directory ~/.gnupg --mode 700
        base64 -d <<< '${{ secrets.GPG_PUBLIC }}' > ~/.gnupg/pubring.gpg
        base64 -d <<< '${{ secrets.GPG_SECRET }}' > ~/.gnupg/secring.gpg
        chmod 600 ~/.gnupg/*
    - name: update branch
      run: SHELL=false runbooks/refresh-patches --repo target ubuntu/${{ matrix.name }}
    - name: build
      run: mkdir dist && cd target && ../runbooks/build
    - name: test
      run: runbooks/quick-test --distrib-codename ${{ matrix.name }} --dist-dir dist --src-dir target
    - name: release
      run: cd target && ../runbooks/release
